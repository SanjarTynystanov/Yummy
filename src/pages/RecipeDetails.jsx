import { useState, useEffect } from 'react';
import { useParams, Link } from 'react-router-dom';
import { categoryTranslations, areaTranslations, ingredientTranslations, instructionTranslations } from '../translations';

export default function RecipeDetails() {
  const { id } = useParams();
  const [recipe, setRecipe] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [videoUrl, setVideoUrl] = useState(null);
  const [isFavorite, setIsFavorite] = useState(false);

  useEffect(() => {
    const fetchRecipeDetails = async () => {
      setLoading(true);
      setError(null);
      try {
        const response = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`);
        if (!response.ok) {
          throw new Error(`–û—à–∏–±–∫–∞ HTTP! –°—Ç–∞—Ç—É—Å: ${response.status}`);
        }
        const data = await response.json();
        console.log('–û—Ç–≤–µ—Ç API The Meal DB –¥–ª—è –¥–µ—Ç–∞–ª–µ–π:', data);
        const meal = data.meals?.[0];
        if (!meal) {
          throw new Error('–†–µ—Ü–µ–ø—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.');
        }
        setRecipe(meal);

        const favorites = JSON.parse(localStorage.getItem('favorites')) || [];
        setIsFavorite(favorites.some(fav => fav.id === meal.idMeal));

        if (meal.strYoutube && (meal.strYoutube.includes('youtube.com') || meal.strYoutube.includes('youtu.be'))) {
          let embedUrl = meal.strYoutube;
          if (meal.strYoutube.includes('youtu.be')) {
            const videoId = meal.strYoutube.split('youtu.be/')[1]?.split('?')[0];
            embedUrl = `https://www.youtube.com/embed/${videoId}`;
          } else if (meal.strYoutube.includes('youtube.com/watch?v=')) {
            const videoId = meal.strYoutube.split('v=')[1]?.split('&')[0];
            embedUrl = `https://www.youtube.com/embed/${videoId}`;
          }
          setVideoUrl(embedUrl);
        } else {
          setVideoUrl(null);
        }
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–µ—Ç–∞–ª–µ–π —Ä–µ—Ü–µ–ø—Ç–∞:', error);
        setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É —Ä–µ—Ü–µ–ø—Ç–æ–≤.');
      } finally {
        setLoading(false);
      }
    };
    fetchRecipeDetails();
  }, [id]);

  const toggleFavorite = () => {
    const favorites = JSON.parse(localStorage.getItem('favorites')) || [];
    const recipeData = {
      id: recipe.idMeal,
      title: recipe.strMeal,
      image: recipe.strMealThumb,
      category: categoryTranslations[recipe.strCategory?.toLowerCase()] || recipe.strCategory || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'
    };
    const isCurrentlyFavorite = favorites.some(fav => fav.id === recipe.idMeal);
    let newFavorites;
    if (isCurrentlyFavorite) {
      newFavorites = favorites.filter(fav => fav.id !== recipe.idMeal);
    } else {
      newFavorites = [...favorites, recipeData];
    }
    localStorage.setItem('favorites', JSON.stringify(newFavorites));
    setIsFavorite(!isCurrentlyFavorite);
  };

  const getIngredients = (meal) => {
    const ingredients = [];
    for (let i = 1; i <= 20; i++) {
      const ingredient = meal?.[`strIngredient${i}`];
      const measure = meal?.[`strMeasure${i}`];
      if (ingredient && ingredient.trim()) {
        const translatedIngredient = ingredientTranslations[ingredient.toLowerCase()] || ingredient;
        ingredients.push(`${measure || ''} ${translatedIngredient}`.trim());
      }
    }
    return ingredients;
  };

  const translateInstructions = (instructions) => {
    if (!instructions) return instructions;
    let translated = instructions;
    Object.entries(instructionTranslations).forEach(([en, ru]) => {
      const regex = new RegExp(`\\b${en}\\b`, 'gi');
      translated = translated.replace(regex, ru);
    });
    return translated;
  };

  return (
    <div className="max-w-7xl mx-auto px-4 py-8">
      {loading ? (
        <p className="text-center text-gray-500">üç≥ –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ—Ü–µ–ø—Ç–∞...</p>
      ) : error ? (
        <div className="text-center text-red-600">
          <p>{error}</p>
          <Link
            to="/recipes"
            className="inline-block mt-4 bg-orange-400 text-white px-6 py-3 rounded-full font-medium hover:bg-orange-500 transition"
            aria-label="–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É —Ä–µ—Ü–µ–ø—Ç–æ–≤"
          >
            ‚¨Ö –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Ä–µ—Ü–µ–ø—Ç–∞–º
          </Link>
        </div>
      ) : recipe ? (
        <div className="bg-stone-50 rounded-2xl p-8 animate-fade-in">
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–µ—Ü–µ–ø—Ç–∞ */}
          <h1 className="text-3xl md:text-4xl font-bold text-orange-600 mb-4 text-center">
            {recipe.strMeal || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'} üç¥
          </h1>
          <div className="flex flex-col md:flex-row gap-8">
            {/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞ */}
            <div className="md:w-1/2">
              <img
                src={recipe.strMealThumb || 'https://via.placeholder.com/400'}
                alt={recipe.strMeal || '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞'}
                className="rounded-2xl w-full h-96 object-cover shadow-md"
              />
            </div>
            {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ—Ü–µ–ø—Ç–µ */}
            <div className="md:w-1/2">
              <div className="bg-white rounded-lg p-6 shadow mb-6">
                <p className="text-gray-600 mb-2">
                  ü•ó <strong>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</strong> {categoryTranslations[recipe.strCategory?.toLowerCase()] || recipe.strCategory || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                </p>
                <p className="text-gray-600 mb-2">
                  üåç <strong>–ö—É—Ö–Ω—è:</strong> {areaTranslations[recipe.strArea?.toLowerCase()] || recipe.strArea || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                </p>
                {recipe.strTags && (
                  <p className="text-gray-600 mb-2">
                    üè∑ <strong>–¢–µ–≥–∏:</strong> {recipe.strTags.split(',').map(tag => tag.trim()).join(', ')}
                  </p>
                )}
              </div>
              <div className="flex gap-4">
                <Link
                  to="/recipes"
                  className="inline-block bg-orange-400 text-white px-6 py-3 rounded-full font-medium hover:bg-orange-500 transition"
                  aria-label="–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É —Ä–µ—Ü–µ–ø—Ç–æ–≤"
                >
                  ‚¨Ö –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Ä–µ—Ü–µ–ø—Ç–∞–º
                </Link>
                <button
                  onClick={toggleFavorite}
                  className={`inline-block px-6 py-3 rounded-full font-medium transition ${
                    isFavorite ? 'bg-orange-400 text-white' : 'bg-gray-200 text-gray-600'
                  } hover:bg-orange-500 hover:text-white`}
                  aria-label={isFavorite ? `–£–¥–∞–ª–∏—Ç—å ${recipe.strMeal} –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ` : `–î–æ–±–∞–≤–∏—Ç—å ${recipe.strMeal} –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ`}
                >
                  {isFavorite ? '‚ù§Ô∏è –í –∏–∑–±—Ä–∞–Ω–Ω–æ–º' : 'üñ§ –î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ'}
                </button>
              </div>
            </div>
          </div>

          {/* –°–µ–∫—Ü–∏—è –≤–∏–¥–µ–æ */}
          <section className="mt-8">
            <h2 className="text-2xl font-semibold text-gray-800 mb-4">üìπ –í–∏–¥–µ–æ-—Ä–µ—Ü–µ–ø—Ç</h2>
            {videoUrl ? (
              <div className="bg-white rounded-2xl p-4 shadow">
                <iframe
                  src={videoUrl}
                  title={`–í–∏–¥–µ–æ-—Ä–µ—Ü–µ–ø—Ç –¥–ª—è ${recipe.strMeal || '—Ä–µ—Ü–µ–ø—Ç–∞'}`}
                  className="w-full h-64 md:h-96 rounded-xl"
                  frameBorder="0"
                  allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                  allowFullScreen
                ></iframe>
              </div>
            ) : (
              <p className="text-gray-600">–í–∏–¥–µ–æ –¥–ª—è —ç—Ç–æ–≥–æ —Ä–µ—Ü–µ–ø—Ç–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ. üòî</p>
            )}
          </section>

          {/* –°–µ–∫—Ü–∏—è –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ */}
          <section className="mt-8">
            <h2 className="text-2xl font-semibold text-gray-800 mb-4">ü•Ñ –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã</h2>
            <ul className="list-disc pl-6">
              {getIngredients(recipe).length > 0 ? (
                getIngredients(recipe).map((ingredient, index) => (
                  <li key={index} className="text-gray-600 mb-2">
                    {ingredient}
                  </li>
                ))
              ) : (
                <li className="text-gray-600">–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –Ω–µ —É–∫–∞–∑–∞–Ω—ã.</li>
              )}
            </ul>
          </section>

          {/* –°–µ–∫—Ü–∏—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π */}
          <section className="mt-8">
            <h2 className="text-2xl font-semibold text-gray-800 mb-4">üìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏</h2>
            {recipe.strInstructions ? (
              <ol className="list-decimal pl-6">
                {translateInstructions(recipe.strInstructions).split('\n').filter(step => step.trim()).map((step, index) => (
                  <li key={index} className="text-gray-600 mb-2">
                    {step}
                  </li>
                ))}
              </ol>
            ) : (
              <p className="text-gray-600">–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –Ω–µ —É–∫–∞–∑–∞–Ω—ã.</p>
            )}
          </section>
        </div>
      ) : (
        <div className="text-center text-gray-600">
          <p>–†–µ—Ü–µ–ø—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. üòî</p>
          <Link
            to="/recipes"
            className="inline-block mt-4 bg-orange-400 text-white px-6 py-3 rounded-full font-medium hover:bg-orange-500 transition"
            aria-label="–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É —Ä–µ—Ü–µ–ø—Ç–æ–≤"
          >
            ‚¨Ö –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Ä–µ—Ü–µ–ø—Ç–∞–º
          </Link>
        </div>
      )}
    </div>
  );
}