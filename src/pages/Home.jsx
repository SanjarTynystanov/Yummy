import { useState, useEffect, useRef } from 'react';
import { Link } from 'react-router-dom';
import { categoryTranslations, areaTranslations } from '../translations';

const Home = () => {
  const [recipes, setRecipes] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const scrollRef = useRef(null);

  useEffect(() => {
    const fetchRecipes = async () => {
      setLoading(true);
      setError(null);
      try {
        const cached = localStorage.getItem('cachedRecipes');
        if (cached) {
          const { recipes, timestamp } = JSON.parse(cached);
          if (Date.now() - timestamp < 3600000) {
            setRecipes(recipes);
            setLoading(false);
            return;
          }
        }

        const promises = Array.from({ length: 24 }, () =>
          fetch('https://www.themealdb.com/api/json/v1/1/random.php')
            .then(res => {
              if (!res.ok) throw new Error(`–û—à–∏–±–∫–∞ HTTP! –°—Ç–∞—Ç—É—Å: ${res.status}`);
              return res.json();
            })
        );
        const responses = await Promise.all(promises);
        const fetchedRecipes = responses
          .map(response => response.meals?.[0])
          .filter(meal => meal && meal.idMeal && meal.strMeal && meal.strMealThumb)
          .map(meal => ({
            id: meal.idMeal,
            title: meal.strMeal,
            image: meal.strMealThumb,
            readyInMinutes: '–ù–µ —É–∫–∞–∑–∞–Ω–æ',
            category: categoryTranslations[meal.strCategory?.toLowerCase()] || meal.strCategory || '–ù–µ —É–∫–∞–∑–∞–Ω–æ',
            area: areaTranslations[meal.strArea?.toLowerCase()] || meal.strArea || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'
          }));

        console.log('–û—Ç–≤–µ—Ç API The Meal DB:', fetchedRecipes);
        if (fetchedRecipes.length === 0) {
          throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç—ã.');
        }

        setRecipes(fetchedRecipes);
        localStorage.setItem('cachedRecipes', JSON.stringify({
          recipes: fetchedRecipes,
          timestamp: Date.now()
        }));
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–µ—Ü–µ–ø—Ç–æ–≤:', error);
        setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é.');
      } finally {
        setLoading(false);
      }
    };
    fetchRecipes();
  }, []);

  const toggleFavorite = (recipe) => {
    const favorites = JSON.parse(localStorage.getItem('favorites')) || [];
    const isFavorite = favorites.some(fav => fav.id === recipe.id);
    let newFavorites;
    if (isFavorite) {
      newFavorites = favorites.filter(fav => fav.id !== recipe.id);
    } else {
      newFavorites = [...favorites, recipe];
    }
    localStorage.setItem('favorites', JSON.stringify(newFavorites));
    setRecipes(recipes.map(r => r.id === recipe.id ? { ...r, isFavorite: !isFavorite } : r));
  };

  const scrollLeft = () => {
    if (scrollRef.current) {
      scrollRef.current.scrollBy({ left: -300, behavior: 'smooth' });
    }
  };

  const scrollRight = () => {
    if (scrollRef.current) {
      scrollRef.current.scrollBy({ left: 300, behavior: 'smooth' });
    }
  };

  const testimonials = [
    { name: '–ê–Ω–Ω–∞ –ö.', rating: 5, quote: 'Yummy ‚Äî —ç—Ç–æ –ª—é–±–æ–≤—å —Å –ø–µ—Ä–≤–æ–≥–æ —Ä–µ—Ü–µ–ø—Ç–∞! –õ–µ–≥–∫–æ –Ω–∞–π—Ç–∏ –±–ª—é–¥–∞ –Ω–∞ –ª—é–±–æ–π –≤–∫—É—Å.' },
    { name: '–ú–∏—Ö–∞–∏–ª –ü.', rating: 4, quote: '–û—Ç–ª–∏—á–Ω—ã–π —Å–∞–π—Ç, —Ä–µ—Ü–µ–ø—Ç—ã –ø—Ä–æ—Å—Ç—ã–µ –∏ –≤–∫—É—Å–Ω—ã–µ, –Ω–æ —Ö–æ—Ç–µ–ª–æ—Å—å –±—ã –±–æ–ª—å—à–µ –≤–µ–≥–∞–Ω—Å–∫–∏—Ö –±–ª—é–¥.' },
    { name: '–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞ –°.', rating: 5, quote: '–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å —É–¥–æ–±–Ω—ã–π, –∞ —Ä–µ—Ü–µ–ø—Ç—ã –≤—Å–µ–≥–¥–∞ –ø–æ–ª—É—á–∞—é—Ç—Å—è! –ú–æ–π —Ñ–∞–≤–æ—Ä–∏—Ç ‚Äî –¥–µ—Å–µ—Ä—Ç—ã.' },
    { name: '–î–º–∏—Ç—Ä–∏–π –õ.', rating: 5, quote: '–ë—ã—Å—Ç—Ä–æ, –∫—Ä–∞—Å–∏–≤–æ, –≤–∫—É—Å–Ω–æ. –¢–µ–ø–µ—Ä—å –≥–æ—Ç–æ–≤–ª—é —É–∂–∏–Ω –∑–∞ –ø–æ–ª—á–∞—Å–∞!' },
  ];

  return (
    <div className="max-w-7xl mx-auto px-4 py-8 pt-16">
      {/* –°–µ–∫—Ü–∏—è Hero */}
      <section className="bg-stone-50 rounded-2xl p-8 mb-8 text-center animate-fade-in">
        <h1 className="text-4xl md:text-5xl font-bold text-orange-600 mb-4">
          üç≥ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Yummy!
        </h1>
        <p className="text-lg text-gray-600 mb-6">
          –û—Ç–∫—Ä–æ–π—Ç–µ –º–∏—Ä –≤–∫—É—Å–Ω—ã—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤ –¥–ª—è –ª—é–±–æ–≥–æ —Å–ª—É—á–∞—è ‚Äî –æ—Ç –∑–∞–≤—Ç—Ä–∞–∫–æ–≤ –¥–æ –∏–∑—ã—Å–∫–∞–Ω–Ω—ã—Ö —É–∂–∏–Ω–æ–≤.
        </p>
        <div className="flex justify-center gap-4">
          <Link
            to="/recipes"
            className="inline-block bg-orange-400 text-white px-6 py-3 rounded-full font-medium hover:bg-orange-500 transition"
          >
            –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Ä–µ—Ü–µ–ø—Ç—ã
          </Link>
        </div>
      </section>

      {/* –°–µ–∫—Ü–∏—è "–ü–æ—á–µ–º—É Yummy?" */}
      <section className="mb-8">
        <h2 className="text-3xl font-bold text-center text-gray-800 mb-6">–ü–æ—á–µ–º—É Yummy?</h2>
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
          <div className="bg-white p-6 rounded-lg shadow hover:shadow-lg transition animate-fade-in">
            <h3 className="text-xl font-semibold text-orange-600 mb-2">–û—Ç–±–æ—Ä–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã</h3>
            <p className="text-gray-600">–¢–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã –æ—Ç –ª—É—á—à–∏—Ö –∫—É–ª–∏–Ω–∞—Ä–æ–≤.</p>
          </div>
          <div className="bg-white p-6 rounded-lg shadow hover:shadow-lg transition animate-fade-in">
            <h3 className="text-xl font-semibold text-orange-600 mb-2">–£–¥–æ–±–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è</h3>
            <p className="text-gray-600">–§–∏–ª—å—Ç—Ä—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –ø–æ–º–æ–≥—É—Ç –±—ã—Å—Ç—Ä–æ –Ω–∞–π—Ç–∏ –Ω—É–∂–Ω–æ–µ –±–ª—é–¥–æ.</p>
          </div>
          <div className="bg-white p-6 rounded-lg shadow hover:shadow-lg transition animate-fade-in">
            <h3 className="text-xl font-semibold text-orange-600 mb-2">–î–ª—è –≤—Å–µ—Ö</h3>
            <p className="text-gray-600">–†–µ—Ü–µ–ø—Ç—ã –¥–ª—è –≤–µ–≥–∞–Ω–æ–≤, –º—è—Å–æ–µ–¥–æ–≤ –∏ –ª—é–±–∏—Ç–µ–ª–µ–π –¥–µ—Å–µ—Ä—Ç–æ–≤!</p>
          </div>
        </div>
      </section>

      {/* –°–µ–∫—Ü–∏—è —Ä–µ—Ü–µ–ø—Ç–æ–≤ —Å –∫–∞—Ä—É—Å–µ–ª—å—é */}
      <section className="mb-8">
        <h2 className="text-3xl font-bold text-center text-gray-800 mb-6">–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã</h2>
        {loading ? (
          <p className="text-center text-gray-500">üç≥ –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ—Ü–µ–ø—Ç–æ–≤...</p>
        ) : error ? (
          <div className="text-center text-red-600">
            <p>{error}</p>
            <Link
              to="/recipes"
              className="inline-block mt-4 bg-orange-400 text-white px-6 py-3 rounded-full font-medium hover:bg-orange-500 transition"
            >
              –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥—Ä—É–≥–∏–µ —Ä–µ—Ü–µ–ø—Ç—ã
            </Link>
          </div>
        ) : recipes.length > 0 ? (
          <div className="relative">
            <button
              onClick={scrollLeft}
              aria-label="–ü—Ä–æ–∫—Ä—É—Ç–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç—ã –≤–ª–µ–≤–æ"
              className="absolute left-0 top-1/2 transform -translate-y-1/2 bg-orange-400 text-white p-2 rounded-full hover:bg-orange-500 transition z-10"
            >
            </button>
            <div
              ref={scrollRef}
              className="flex overflow-x-auto scroll-smooth gap-6 pb-4"
              style={{ scrollbarWidth: 'none', msOverflowStyle: 'none' }}
            >
              {recipes.map((recipe) => {
                const isFavorite = (JSON.parse(localStorage.getItem('favorites')) || []).some(fav => fav.id === recipe.id);
                return (
                  <Link to={`/recipes/${recipe.id}`} key={recipe.id}>
                    <div
                      className="flex-none bg-white rounded-2xl shadow p-4 hover:shadow-lg transition transform hover:-translate-y-1 w-64"
                    >
                      <img
                        src={recipe.image || 'https://via.placeholder.com/150'}
                        alt={recipe.title || '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞'}
                        className="rounded-xl w-full h-48 object-cover mb-4"
                      />
                      <h2 className="text-xl font-semibold mb-2 truncate">{recipe.title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}</h2>
                      <p className="text-gray-600">‚è± {recipe.readyInMinutes}</p>
                      <p className="text-gray-600">ü•ó {recipe.category}</p>
                      <button
                        onClick={(e) => {
                          e.preventDefault();
                          toggleFavorite(recipe);
                        }}
                        className={`mt-2 px-4 py-2 rounded-full font-medium transition ${
                          isFavorite ? 'bg-orange-400 text-white' : 'bg-gray-200 text-gray-600'
                        } hover:bg-orange-500 hover:text-white`}
                        aria-label={isFavorite ? `–£–¥–∞–ª–∏—Ç—å ${recipe.title} –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ` : `–î–æ–±–∞–≤–∏—Ç—å ${recipe.title} –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ`}
                      >
                        {isFavorite ? '‚ù§Ô∏è –í –∏–∑–±—Ä–∞–Ω–Ω–æ–º' : 'üñ§ –î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ'}
                      </button>
                    </div>
                  </Link>
                );
              })}
            </div>
            <button
              onClick={scrollRight}
              aria-label="–ü—Ä–æ–∫—Ä—É—Ç–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç—ã –≤–ø—Ä–∞–≤–æ"
              className="absolute right-0 top-1/2 transform -translate-y-1/2 bg-orange-400 text-white p-2 rounded-full hover:bg-orange-500 transition z-10"
            >
            </button>
            <style jsx>{`
              div::-webkit-scrollbar {
                display: none;
              }
            `}</style>
          </div>
        ) : (
          <div className="text-center text-gray-600">
            <p>–†–µ—Ü–µ–ø—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. üòî</p>
            <Link
              to="/recipes"
              className="inline-block mt-4 bg-orange-400 text-white px-6 py-3 rounded-full font-medium hover:bg-orange-500 transition"
            >
              –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥—Ä—É–≥–∏–µ —Ä–µ—Ü–µ–ø—Ç—ã
            </Link>
          </div>
        )}
      </section>

      {/* –°–µ–∫—Ü–∏—è –æ—Ç–∑—ã–≤–æ–≤ */}
      <section className="bg-stone-50 rounded-2xl p-8 mb-8">
        <h2 className="text-3xl font-bold text-center text-gray-800 mb-6">–ß—Ç–æ –≥–æ–≤–æ—Ä—è—Ç –Ω–∞—à–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</h2>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          {testimonials.map((testimonial, index) => (
            <div key={index} className="bg-white p-6 rounded-lg shadow">
              <div className="flex mb-2">
                {[...Array(testimonial.rating)].map((_, i) => (
                  <svg key={i} className="w-5 h-5 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                    <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.286 3.97a1 1 0 00.95.69h4.18c.969 0 1.371 1.24.588 1.81l-3.39 2.46a1 1 0 00-.364 1.118l1.286 3.97c.3.921-.755 1.688-1.54 1.118l-3.39-2.46a1 1 0 00-1.175 0l-3.39 2.46c-.784.57-1.838-.197-1.54-1.118l1.286-3.97a1 1 0 00-.364-1.118l-3.39-2.46c-.783-.57-.38-1.81.588-1.81h4.18a1 1 0 00.95-.69l1.286-3.97z" />
                  </svg>
                ))}
              </div>
              <p className="text-gray-600 italic mb-2">"{testimonial.quote}"</p>
              <p className="text-gray-800 font-semibold">{testimonial.name}</p>
            </div>
          ))}
        </div>
      </section>

      {/* –§—É—Ç–µ—Ä */}
      <footer className="text-center text-gray-600 py-7 px-4 bg-stone-50 rounded-2xl">
        <p>¬© 2025 Yummy. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.</p>
        <div className="flex justify-center gap-8 mt-4 ">
          <Link to="/about" className="hover:text-orange-400">–û –Ω–∞—Å</Link>
          <Link to="/contact" className="hover:text-orange-400">–ö–æ–Ω—Ç–∞–∫—Ç—ã</Link>
          <Link to="/policy" className="hover:text-orange-400">–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</Link>
          <Link to="/favorites" className="hover:text-orange-400">–ò–∑–±—Ä–∞–Ω–Ω–æ–µ</Link>
        </div>
      </footer>
    </div>
  );
};

export default Home;